###### Copyright Easton Potokar, 2020

name: Writeup-Readme

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'writeup.pdf'
      - '.README.md'
      - '.github/workflows/writeup_readme.yml'

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    env:
      ORPHAN_BRANCH: readme_images
      QUALITY: 85
      DPI: 900
      GHOSTSCRIPT_TAG: 1000
      GHOSTSCRIPT_VERSION: 10.0.0
      IMAGEMAGICK_VERSION: 7.1.1-2
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      
      # Needed for the installation
      - name: 1
        run: sudo apt update && sudo apt install -y wget unzip gnupg git pkg-config debhelper dh-exec dpkg-dev g++ chrpath

      # Remove old ImageMagick and GhostScript versions that are installed by default
      - name: 2
        run: |
          sudo apt purge -y *magick* *ghostscript*
          sudo apt autopurge -y

      # Tesseract 5x repository
      - name: 3
        run: |
          wget -O- "https://notesalexp.org/debian/alexp_key.asc" | gpg --dearmor -o /usr/share/keyrings/tesseract-ocr-5x-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/tesseract-ocr-5x-archive-keyring.gpg] https://notesalexp.org/tesseract-ocr5/jammy/ jammy main" | sudo tee /etc/apt/sources.list.d/tesseract-ocr-5x.list

      # Install packages
      - name: 4
        run: |
          sudo apt update && sudo apt install -y \
          openjdk-8-jdk-headless \
          python3 python3-pip \
          poppler-utils libpoppler-cpp-dev libpoppler-dev cmake python3-pkgconfig \
          tesseract-ocr tesseract-ocr-deu \
          gsfonts libbz2-dev libdjvulibre-dev libexif-dev libfftw3-dev libfontconfig1-dev libfreetype6-dev libheif-dev libjpeg-dev liblcms2-dev liblqr-1-0-dev libltdl-dev liblzma-dev libopenexr-dev libopenjp2-7-dev libpango1.0-dev libperl-dev libpng-dev librsvg2-dev librsvg2-bin libtiff-dev libwebp-dev libwmf-dev libx11-dev libxext-dev libxml2-dev libxt-dev zlib1g-dev doxygen doxygen-latex graphviz jdupes libxml2-utils xsltproc \
          libzbar0 ffmpeg libsm6 libxext6
      #endregion

      #region GhostScript
      - name: 5
        run: | 
          sudo -i
          sudo mkdir -p /tools/ghostscript
          cd /tools/ghostscript
          sudo wget https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs${{env.GHOSTSCRIPT_TAG}}/ghostscript-${{env.GHOSTSCRIPT_VERSION}}.tar.gz -O - | sudo tar -xzvf - -C /tools/ghostscript
          sudo -i
          cd ghostscript-${{env.GHOSTSCRIPT_VERSION}}
          sudo ./configure
          sudo make
          sudo make install
      #endregion

      #region ImageMagick
      - name: 6
        run: |
          sudo mkdir -p /tools/imagemagick
          sudo -i
          cd /tools/imagemagick
          wget -O imagemagick-${{env.IMAGEMAGICK_VERSION}}.tar.gz https://github.com/ImageMagick/ImageMagick/archive/refs/tags/${{env.IMAGEMAGICK_VERSION}}.tar.gz
          tar -xvf imagemagick-${{env.IMAGEMAGICK_VERSION}}.tar.gz
          sudo -i
          cd imagemagick-${{env.IMAGEMAGICK_VERSION}}
          autoconf
          ./configure --with-modules --enable-shared
          sudo make
          sudo make install
          sudo make distclean
          ldconfig
          cat /etc/ImageMagick-6/policy.xml
      #endregion

      ## TEST
      - name: Convert PDF to JPG
        run: convert -density 900 -trim -colorspace sRGB -alpha remove writeup.pdf -quality 90 output-%03d.jpg

      ## CONVERT THE ACTUAL IMAGES
      - name: Convert Writeup to Images
        uses: jruipinto/ImageMagick-action@v1
        with:
          command: convert -density ${{env.DPI}} -trim -colorspace sRGB -alpha remove writeup.pdf -quality ${{env.QUALITY}} output-%03d.jpg

      ## COMMIT THEM TO AN ORPHAN BRANCH
      - name: Commit images to orphan branch
        run: | 
          git checkout --orphan ${{env.ORPHAN_BRANCH}}
          touch .README.md
          mv .README.md .README.temp
          git rm -rf .
          git add *.jpg
          git config --local user.email "action@github.com"
          git config --local user.name "GithubActions"
          git commit -m "Updated writeup images" -a

      ## PUSH THEM TO AN ORPHAN BRANCH
      - name: Push images to orphan branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.ORPHAN_BRANCH }}
          force: true

      ## UPDATE README IN BRANCH IF IT NEEDS TO BE UPDATED
      - name: Update Readme
        id: main
        run: |
          echo $'\n' >> .README.temp
          for filename in *.jpg; do \
            echo '![image](https://github.com/'$GITHUB_REPOSITORY'/blob/${{env.ORPHAN_BRANCH}}/'$filename'?raw=true)' >> .README.temp;  \
          done
          git checkout ${{ github.ref }}
          rm README.md || (exit 0)
          mv .README.temp README.md
          OUTPUT=0
          git diff --exit-code README.md || OUTPUT=$?
          echo "::set-output name=OUTPUT::$OUTPUT"

      ## COMMIT README
      - name: Commit new README (if changed)
        if: steps.main.outputs.OUTPUT == 1
        run: |
          git add README.md
          git config --local user.email "action@github.com"
          git config --local user.name "GithubActions"
          git commit -m "Updated Readme" -a

      ## PUSH CHANGES
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
